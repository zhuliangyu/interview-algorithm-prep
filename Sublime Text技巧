题目分类的方法: 
1. 算法: DFS, BFS, 双指针
2. 数据结构: Array, Matrix, LinkedList, Tree, Graph
3. 题目专题: 岛屿问题, 2sum问题, 回文问题

艾宾浩斯记忆曲线
https://english.yysaa.cn/table

新手必刷50题
https://www.lintcode.com/ladder/190/

初级算法
https://leetcode-cn.com/leetbook/detail/top-interview-questions-easy/

中级算法
https://leetcode-cn.com/leetbook/read/top-interview-questions-medium/

Java集合介绍
https://www.liaoxuefeng.com/wiki/1252599548343744/1265109905179456

AWS
https://github.com/ptcodes/awesome-aws-certifications#whitepapers


三步走: 完全不会做 → 有点思路(有个模糊的大概) → 熟练应用(明白各种细节)
从量变到质变的过程

靠自己的毅力是坚持不了多久的, 你需要买最贵的课程,让自己心疼付出的钱, 这样才能真的逼迫自己刷题.  

在线练习: https://codeinterview.io/

知道要刷题的人有100人, 但是最后可能只有1个人真的下决心去刷

0. 找到最重要的题目 (原题, 母题), 求精不求多!!! 九章老师总结的
很多题，就是多穿了一件马甲的原题。你要学习的是母题, 而不是那些乱七八糟的马甲

一开始不要看答案, 激发自己的好奇心, 让自己死命的想. 越好奇, 看答案后记得越牢固 

问题 --> 好奇心  --> 思考 --> 获得奖励, 多巴胺 --> 深入思考...
如何设计自己思考后的奖励? 

1. 挖掘知识点和考点: 这些题目背后一定考察了一个重要的技巧或者知识点, 抓出背后的重要知识点
看到一道题, 首先需要能区分考点, 到底考的是什么
一个一个专题去刷题, 要按照题目分类刷
重视基础的复习, 妙招没有用

2. (思维导图框架)弄清知识之间的联系: 这个知识点, 在总知识网里面处于什么样的位置
一看某道题目，就从最根本处知道此道题目的来龙去脉，知道它位于整个leetcode体系大厦中的哪个房间
结构化归纳

3. 画图, 画图, 画图 -- 寻找别人的配图
听觉学习: 讲解视频
视觉学习: 画解法图
读写学习: 整理标准答案 + 背诵
实践学习: 使用leetcode自测

4. (找答案) 找到自己可以理解的逻辑清晰的标准答案代码, 总结到自己的答案中.
重点是答案的consistency, 可以总结出套路
自己的总结的答案要有自己的风格, 才能在实战中用上, 任何看起来很炫的代码, 只要你用不上, 就是无用功

5. (思路总结笔记) 每一行标准答案写上注释, 帮助自己理解
你不要随意换自己的标准答案, 要总结一套自己看的明白的标准解题, 每次虽然可能忘了, 但是只要看看自己的笔记和注释, 就很容易想起来
这就是你的费曼学习法, 就是自己给自己讲解每一行的代码

6. (拆答案)成一个一个小的步骤, 步骤越小, 越可以重复利用 (积木式乐高解题法)
把大象放进冰箱一共要几步, 一打开冰箱门, 二大象放进冰箱, 三关上冰箱门

7. (会讲)不看标准答案, 口述伪代码实现流程, 主要就是口述自己写的注释的部分

8. (背诵)精确熟练背诵: 背模板还是背例题，都要能够熟记到可以能够默写的程度。
当你紧张的脑中一片空白的时候, 你也可以肌肉记忆的写出

	整段代码拆分代码块 --> 注释伪代码 --> 提取关键词 (从多到少精简的过程)
	关键词 --> 还原伪代码 --> 还原代码块 (从少还原为多扩展的过程)

	伪代码, 背注释 -- 背诵自己的语言, 比背诵别人的代码快的多
	规约
	代码拆成几个大块, 一块一块背诵
		每一块抓出一个关键字, 精简背诵的内容
		拍照记忆法, 一块一块的拍照


9. (多题一解)套上模板或者母题例题, 尝试举一反三其他类似题 (传说中的刷题)
从一道典型题目，形成知识体系、形成解题技巧体系，进而简化解题技巧体系
思考自己变种题做不出来原因是什么, 卡在哪里, 反思反思反思

10. (套路): 刷题练到看见某条件，下意识地在几秒钟之内想到某个固定套路，想到做过的某道母题，你就有进步了, 最后把这项技能固化下来. 深入思考, 去领悟, 这部分是无法教的. 
对于题目的深入思考, 升华, 才能将别人的代码变成自己的能力

11. (背诵)!重复!再重复!
一开始只要记忆一个大致的框架, 有一个模糊的头, 然后慢慢根据逻辑补充内容. 不要一开始就要求自己记忆所有细节, 这是不可能做到的. 
都是考记忆熟练而已, 文科学习法, 弱项是记忆. 

如何复习: ArrayList扩容复习法
睡前过电影法!!!带着你的问题入睡
当天睡前复习, 第二天复习, 周末复习, 第二周周末复习, 第四周周末复习

以上只是掌握了"固定的套路", 只能解决简单到中等的题目

高难度题其实基本没有套路，或者套路都不固定。这个只能随缘了. 对于你做过的题目的内在深入联系以及其变化思考得太不够了

11.5 自测 (输出)
在leetcode里面默写出bug free的代码, 不要抄
看到绿色的check通过测试, 就会让你很快乐

错题本: 
自己在自测里面发现的代码错误, 都要以comment形式总结到自己的题解里面, 供下次查阅

12. 实战阶段
按照公司tag和面经来邮递方式的准备
https://www.lintcode.com/problem/enterprise/

13. 多参加模拟面试, 模拟的次数越多 , 越不紧张
让自己丢脸, 调动自己情绪, 你才能记住


Sublime Text使用技巧
1. rename a variable
可以选中一个单词，然后使用control + command + g来选中全部一样的单词，进行统一多点编辑.

2. format java code
 	shift + command + P 
 	coolFormatter

3. search function in all files
	shift + command + f

4. search file name in a folder
	command + p